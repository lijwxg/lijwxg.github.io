#+hugo_base_dir: ~/projects/blog/lijwxg

* pandas

** DONE 常用pandas方法                                                :numpy:
   CLOSED: [2019-10-03 Thu 16:26]
   :properties:
   :export_file_name: pandas
   :end:
 常用 pandas 处理数据, 有较好的实现方法和效率

 #+hugo: more
*** 常用函数

 | 函数    | 描述                                                                                                              |
 | array   | 转换输入数据(列表, 数组或其它序列类型)到一个 ndarray, 可以推断一个 dtype 或明确的设置一个 dtype. 默认拷贝输入数据 |
 | asarray | 转化输入为一个 ndarray, 当输入已经是一个 ndarray 时就不拷贝.                                                      |
 | arange  | 同内建的 range 函数, 但不返回列表而是一个 ndarray                                                                 |

*** 如果是对特定列求和的话

 使用 iloc 选择再使用 apply 求和

*** 计算各列数据总和并作为新列添加到末尾

 #+begin_src python
 df['Col_sum'] = df.apply(lambda x: x.sum(), axis=1)
 #+end_src

*** 计算各行数据总和并作为新行添加到末尾

 #+begin_src python
 df.loc['Row_sum'] = df.apply(lambda x: x.sum())
 #+end_src

*** 对于 pandas 中的 Dataframe,如果需要按照列 A 进行分组，将同一组的列 B 求和,可以通过下述操作完成：

 #+begin_src python
 df = df.groupby(by=['column_A'])['column_B'].sum()
 #+end_src

 生成的数据类型是 Series,如果进一步需要将其转换为 dataframe,可以调用 Series 中的 to_frame()方法.

 #+begin_src python
 df = df.to_frame()
 #+end_src

 可以取出上述 dataframe 中的 index,生成新的一列，并删除原 dataframe 中的 index.

 #+begin_src python
 df['column_A'] =df.index
 df =df.reset_index(drop= True)
 #+end_src

*** 计算百分比

 #+begin_src python
 price.pct_change()
 #+end_src

*** 删除 gender 列，不改变原来的 data 数据，返回删除后的新表 data_2。axis 为 1 表示删除列，0 表示删除行。inplace 为 True 表示直接对原表修改。

 #+begin_src python
 data_2 = data.drop('gender', axis=1, inplace=False)
 #+end_src

*** 改变某一列的位置。如：先删除 gender 列，然后在原表 data 中第 0 列插入被删掉的列

 #+begin_src python
 data.insert(0, '性别', data.pop('gender'))  *pop返回删除的列，插入到第0列，并取新名为'性别'
 #+end_src
